# This workflow will upload a Python Package to PyPI when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  release-build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - uses: actions/checkout@v4

      # Step 2: Set up Python
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      # Step 3: Install dependencies for building the package
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build

      # Step 4: Build the package
      - name: Build release distributions
        run: |
          python -m build

      # Step 5: Upload the build artifacts
      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      # This permission is necessary for trusted publishing
      id-token: write

    # Define the environment used for publishing
    environment:
      name: pypi
      url: https://pypi.org/project/paramclass-pyomo/

    steps:
      # Step 1: Retrieve the build artifacts
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      # Step 2: Publish the package to PyPI
      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          password: ${{ secrets.PYPI_API_TOKEN }}
